// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitCatSinghv6.Data;

#nullable disable

namespace RecruitCatSinghv6.Migrations
{
    [DbContext(typeof(RecruitCatSinghv6Context))]
    [Migration("20220922205300_candidates1")]
    partial class candidates1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RecruitCatSinghv6.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndustryID")
                        .HasColumnType("int");

                    b.Property<int?>("JobID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OptionalStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TargetSalary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompanyID");

                    b.HasIndex("IndustryID");

                    b.HasIndex("JobID");

                    b.ToTable("Candidate");
                });

            modelBuilder.Entity("RecruitCatSinghv6.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndustryID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaxSal")
                        .HasColumnType("float");

                    b.Property<double>("MinSal")
                        .HasColumnType("float");

                    b.Property<DateTime>("OptionalStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("RecruitCatSinghv6.Models.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("AverageSalary")
                        .HasColumnType("float");

                    b.Property<bool?>("ITSector")
                        .HasColumnType("bit");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReqSkills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industry");
                });

            modelBuilder.Entity("RecruitCatSinghv6.Models.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("MaxSalary")
                        .HasColumnType("float");

                    b.Property<double>("MinSalary")
                        .HasColumnType("float");

                    b.Property<double?>("Stockoption")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Yearsexp")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("JobTitle");
                });

            modelBuilder.Entity("RecruitCatSinghv6.Models.Candidate", b =>
                {
                    b.HasOne("RecruitCatSinghv6.Models.Company", "Company")
                        .WithMany("Candidate")
                        .HasForeignKey("CompanyID");

                    b.HasOne("RecruitCatSinghv6.Models.Industry", "Industry")
                        .WithMany("Candidates")
                        .HasForeignKey("IndustryID");

                    b.HasOne("RecruitCatSinghv6.Models.JobTitle", "JobTitle")
                        .WithMany("Candidates")
                        .HasForeignKey("JobID");

                    b.Navigation("Company");

                    b.Navigation("Industry");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("RecruitCatSinghv6.Models.Company", b =>
                {
                    b.HasOne("RecruitCatSinghv6.Models.Industry", "Industry")
                        .WithMany("Company")
                        .HasForeignKey("IndustryID");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("RecruitCatSinghv6.Models.Company", b =>
                {
                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("RecruitCatSinghv6.Models.Industry", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("RecruitCatSinghv6.Models.JobTitle", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
